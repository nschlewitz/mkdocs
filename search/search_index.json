{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Sommaire","text":"<ul> <li>Environnement de Dev:<ul> <li>Station de travail</li> <li>Premiers pas sous Poetry</li> <li>Documentation en code</li> <li>About Mkdocs</li> </ul> </li> <li>Projet Accidents:<ul> <li>Consignes</li> </ul> </li> </ul>"},{"location":"accidents/consignes/","title":"Projet - Consignes","text":""},{"location":"accidents/consignes/#etape-1-exploration-des-donnees-dataviz-deadline-2012","title":"Etape 1/ Exploration des donn\u00e9es + DataViz\u2019 : Deadline 20/12","text":"<ul> <li>Votre premi\u00e8re t\u00e2che consistera \u00e0 d\u00e9finir le contexte et le p\u00e9rim\u00e8tre du projet : j\u2019attends que vous preniez vraiment le temps de bien comprendre le projet et de vous renseigner au mieux sur les notions que celui-ci va introduire.</li> <li>Il faudra ensuite prendre en main et d\u00e9couvrir votre jeu de donn\u00e9es et faire une analyse presque exhaustive de celui-ci afin de mettre en lumi\u00e8re la structure, les difficult\u00e9s et \u00e9ventuels biais du dataset.</li> </ul> <p>Vous pourrez utiliser ce template : Template - Rapport exploration des donn\u00e9es J\u2019attendrai \u00e9galement au moins 5 repr\u00e9sentations graphiques construites \u00e0 partir de votre jeu de donn\u00e9es, visuelles et surtout pertinentes. Pour chacune d\u2019elle j\u2019attendrai :</p> <ul> <li>Un commentaire pr\u00e9cis, qui analyse la figure et apporte un avis \u201cm\u00e9tier\u201d.</li> <li>Une validation du constat par des manipulations de donn\u00e9es, ou un test statistique.</li> </ul>"},{"location":"accidents/consignes/#etape-2-pre-processing-et-feature-engineering-deadline-2401","title":"Etape 2/ Pre-processing et feature engineering : Deadline 24/01","text":"<ul> <li>Suite aux constats \u00e9tablis lors de l'\u00e9tape pr\u00e9c\u00e9dente, vous devrez nettoyer votre jeu de donn\u00e9es et effectuer les \u00e9tapes de pre-processing.</li> <li>Si besoin, il faudra transformer et/ou ajouter des features et enrichir votre jeu de donn\u00e9es.</li> <li>L\u2019objectif \u00e0 la fin de cette \u00e9tape est d\u2019avoir un dataset pr\u00eat pour effectuer des analyses approfondies et/ou une mod\u00e9lisation \u00e0 l\u2019aide de Machine (et Deep) Learning.</li> </ul> <p>Rendu 1 : rapport d\u2019exploration, de data visualisation et de pre-processing des donn\u00e9es. Apr\u00e8s le Rendu 1, si ce n\u2019est pas d\u00e9j\u00e0 fait, je vous instancierai un repo GitHub pour votre groupe, celui-ci devra respecter le template fourni et \u00eatre transmis au jury avec le rapport final.</p>"},{"location":"accidents/consignes/#etape-3-modelisation-deadline-0905","title":"\u00c9tape 3/ Mod\u00e9lisation : Deadline 09/05","text":"<ul> <li>Step 1 : Deadline 07/03</li> <li>\u00c9laboration des premi\u00e8res it\u00e9rations de mod\u00e9lisation avec des mod\u00e8les baseline.<ul> <li>Analysez vos premiers r\u00e9sultats, votre approche est-elle pertinente ? Et votre mod\u00e8le ?</li> </ul> </li> <li>Step 2 : Deadline 28/03</li> <li>Utilisez les m\u00e9triques de Machine Learning et de statistiques afin d\u2019exploiter et comprendre au mieux les r\u00e9sultats de votre mod\u00e8le.</li> <li>Optimisation : Essayer d\u2019am\u00e9liorer votre mod\u00e8le \u00e0 l\u2019aide d\u2019outils d\u2019optimisation, vous pouvez essayer d\u2019autres mod\u00e8les plus complexes et comparer les r\u00e9sultats.</li> <li>Step 3 : Deadline 09/05</li> <li>Mod\u00e9lisation avanc\u00e9e : Utilisation de techniques de bagging/boosting et de Deep Learning.</li> <li>Interpr\u00e9tation : Utilisez les outils d\u2019interpr\u00e9tabilit\u00e9 pour mieux comprendre les r\u00e9sultats de vos mod\u00e8les.</li> <li>Conclusions scientifiques et m\u00e9tiers en fonction du succ\u00e8s ou de l\u2019\u00e9chec de la mod\u00e9lisation.</li> </ul> <p>Rendu 2 : rapport de mod\u00e9lisation.</p>"},{"location":"accidents/consignes/#etape-4-rapport-final-codes-sur-github-deadline-0606","title":"\u00c9tape 4/ Rapport final + codes sur GitHub : Deadline 06/06","text":"<ul> <li>Vous rendrez le rapport final : constitu\u00e9 des deux premiers rendus, il concr\u00e9tise votre vision et votre travail face \u00e0 votre projet en int\u00e9grant une conclusion et une ouverture.</li> <li>Vous rendez \u00e9galement votre code propre et comment\u00e9 sur GitHub, si le temps le permet vous pourrez peaufiner votre mod\u00e8le et votre pipeline de mod\u00e9lisation durant cette \u00e9tape.</li> </ul>"},{"location":"accidents/consignes/#etape-5-streamlit-soutenances-3006-a-confirmer","title":"\u00c9tape 5/ Streamlit + Soutenances: 30/06 (\u00e0 confirmer)","text":"<ul> <li>Le document Soutenance_M\u00e9thodologie r\u00e9sume l\u2019organisation de la soutenance.</li> <li>La soutenance se d\u00e9roule de la mani\u00e8re suivante :</li> <li>20 minutes de pr\u00e9sentation</li> <li>10 minutes de questions de la part des membres du jury</li> </ul> <p>Vous avez la possibilit\u00e9 de r\u00e9aliser soit :</p> <ul> <li>une pr\u00e9sentation Powerpoint + D\u00e9mo Streamlit</li> <li>toute la pr\u00e9sentation avec votre application Streamlit</li> </ul> <p>Il faudra que votre application soit :</p> <ul> <li>esth\u00e9tique, en particulier qu\u2019elle contienne plusieurs onglets.</li> <li>cod\u00e9e avec soin, sans r\u00e9-entrainer votre mod\u00e8le.</li> <li>fonctionne sans bugs.</li> </ul>"},{"location":"dev/about/","title":"MkDocs Material Template","text":"<p>This is a template repository for anyone that wants to use the MkDocs Material Theme.</p>"},{"location":"dev/about/#getting-started","title":"Getting Started","text":"<p>To get started, first clone this template by clicking on the Green button labeled <code>Use this template</code>. On the new screen, give your repository a name and make sure to check <code>Include all branches</code>. This will make sure that the <code>gh-pages</code> branch is included, or otherwhise publishing the docs to GitHub Pages could cause errors (See Troubleshooting).</p>"},{"location":"dev/about/#creating-pages","title":"Creating pages","text":"<p>To create new pages, just add new markdown files to the docs folder of the repository and edit them. MkDocs will then turn those into static HTML pages once you build or deploy the pages.</p> <p>The template also has some pre-made settings for you to help you with creating documentation much easier. In the mkdocs.yml will you find many settings that you can alter. Please check the comments and the links they have for more info.</p> <p>It also contains some extensions that might be useful including:</p> <ul> <li>Admonition</li> <li>CodeHilite</li> <li>ToC</li> <li>PyMdown Extensions</li> </ul> <p>You're free to add, edit or remove any extension at your own discretion, but keep in mind that some expansions might caus compatibility issues with others.</p>"},{"location":"dev/about/#build-pages","title":"Build Pages","text":"<p>To build pages (locally) can you use the <code>mkdocs build</code> command in your prefered command prompt. Note that for the successful execution of this command you have to...</p> <ul> <li>...be in the folder that contains the <code>mkdocs.yml</code></li> <li>...have Python 3.7 installed</li> <li>...have MkDocs and all required dependencies such as Material for MkDocs installed. Note that Material for MkDocs automatically downloads MkDocs and also certain extensions such as the PyMdown Extensions.</li> </ul> <p>MkDocs would now build the HTML in the defined configuration folder for you to use.</p>"},{"location":"dev/about/#deploy-to-github","title":"Deploy to GitHub","text":"<p>If you want to publish the pages on GitHub Pages can you use the premade workflow for this. This workflow will setup Python, download Material for MkDocs and all its dependencies and deploy the pages to the <code>gh-pages</code> branch to then be viewable under <code>&lt;username&gt;.github.io/&lt;repository&gt;</code> (unless you defined a specific CNAME through a CNAME file in the docs folder).</p> <p>Note that in order for this to work will you need to have a <code>gh-pages</code> branch already made.</p>"},{"location":"dev/about/#netlify","title":"Netlify","text":"<p>Netlify is an amazing service to build and deploy pages. This template comes with a <code>runtime.txt</code> which is used by Netlify to determine the Python version used (They use an old version of Python... Don't ask why).</p> <p>For more information, please check out their website.</p>"},{"location":"dev/about/#troubleshooting","title":"Troubleshooting","text":"<p>The deploy action gives me an error when deploying. What is the issue?</p> <p>There can be many issues but the most common ones are that you either don't have a <code>gh-pages</code> branch set or that the <code>requirements.txt</code> file is missing or its content is invalid.</p> <p>Can I alter the overall style of the pages?</p> <p>Yes. Material for MkDocs supports Theme extensions, meaning you can override specific parts of a theme by providing the particula file in a folder and defining this folder as the <code>custom_dir</code> one in the mkdocs.yml. This template ships with a <code>theme</code> folder that can be used for that and you can just uncomment the aforementioned line in the YAML file.</p>"},{"location":"dev/about/#dependabot","title":"Dependabot","text":"<p>The repository contains a <code>dependabot.yml</code> file inside the <code>.github</code> folder which allows automatic updates through GitHub's Dependabot. It is configured to target both Python dependencies (inside the <code>requirements.txt</code>) and GitHub Actions dependencies, to make sure bot are updated accordingly.</p> <p>Note that it is configured by default to add the <code>Type: Update (Dependency)</code> label and also the <code>Target: Python (pip)</code> label for Python and <code>Target: GitHub Actions</code> label for GitHub Actions Dependencies. Those labels don't exist by default so you have to either create them, or alter the ones in the dependabot.yml (You can also just remove the <code>labels</code> sections).</p>"},{"location":"dev/about/#credits","title":"Credits","text":"<p>A big thank you goes to the following people/groups:</p> <ul> <li>MkDocs for providing the software, to generate documentation.</li> <li>squidfunk for the MkDocs Material Theme.</li> <li>facelessuser for the PyMdown Extensions.</li> </ul>"},{"location":"dev/about/#license","title":"License","text":"<p>This template is served under the MIT license. Read the LICENSE file for more info.</p>"},{"location":"dev/doc_as_code/","title":"Documentation en code","text":"<p>Dans ce projet, nous faisons la promotion des m\u00e9thodologies autour de Git. En cons\u00e9quence, la documentation, est consid\u00e9r\u00e9e comme du code et est donc g\u00e9r\u00e9e en tant que tel.</p> <p>La documentation est realis\u00e9e en Markdown et nous tirons parti du Framework MkDocs pour mettre en ligne une documentation dans laquelle on puisse naviguer simplement.</p> <p>La documentation est g\u00e9n\u00e9r\u00e9e automatiquement gr\u00e2ce aux Github actions. Le site web statique est mis en ligne avec <code>github pages</code>, l'acc\u00e8s \u00e0 la documentation est public tout comme le projet.</p> <p>L'URL est fournie dans la description du projet, elle est construite comme ci-dessous:</p> Champ Valeur Github project https://gitlab.tech.orange/&lt;group&gt;/&lt;project_subpath&gt; Documentation URL https://&lt;group&gt;.github.io/&lt;project_subpath&gt;"},{"location":"dev/doc_as_code/#construire-la-documentation-et-naviguer-locallement-dedans","title":"Construire la documentation et naviguer locallement dedans","text":"<p>Afin d'\u00e9viter les multiples allers-retours sur la doc en ligne, il est pr\u00e9f\u00e9rable de l'\u00e9diter locallement sur son poste de travail. Pour cela, vous devez construire votre environnement de documentation.</p> <p>MkDocs est un framework python, il est fortement recommand\u00e9 de cr\u00e9er un environnement virtuel pour l'installer.</p> <pre><code>cd &lt;my-folder&gt;\npoetry config virtualenvs.in-project true\n# virtualenv is located in &lt;my-folder&gt; .venv subdirectory \npoetry shell\npoetry install --no-root\n$(mkdocs) mkdocs serve\n</code></pre> <p>Une fois cr\u00e9\u00e9, vous pouvez visualiser votre documentation localement \u00e0 l'url http://127.0.0.1:8000/.</p>"},{"location":"dev/doc_as_code/#suggerer-une-modification","title":"Sugg\u00e9rer une modification","text":"<p>La documentation est comme le code et le d\u00e9pot Git repr\u00e9sente la source de v\u00e9rit\u00e9.</p> <p>N'importe quel changement commence par une Issue Github d\u00e9crivant le changement. Cette Issue est utilis\u00e9e pour cr\u00e9er une Pull Request.</p> <p>Vous soumettez ensuite votre proposition dans cette Pull Request. En travaillant le local sur votre poste de travail, il est possible de b\u00e9n\u00e9ficier de linter dans VS Code pour v\u00e9rifier le bon format de ce que vous r\u00e9digez.</p> <p>Des extensions comme:</p> <ul> <li>markdownlint: id = DavidAnson.vscode-markdownlint</li> <li>rewrap: id = stkb.rewrap</li> </ul> <p>Permettent de voir assez t\u00f4t les erreurs de formatage.</p> <p>Une fois que vous \u00eates satisfait, vous devez</p> <ul> <li>Mettre la Pull Request \u00e0 l'\u00e9tat <code>Ready</code></li> <li>Communiquer avec le reste de l'\u00e9quipe afin qu'elle soit revue</li> <li>Une fois que toutes les remarques de revue sont r\u00e9pondues, vous pouvez merger.</li> </ul> <p>Note</p> <p>Le Reviewer ne merge pas apr\u00e8s avoir revu et approuv\u00e9 la Pull Request, il informe l'auteur de la Pull Request qui s'en chargera.</p>"},{"location":"dev/doc_as_code/#mkdocs","title":"MkDocs","text":""},{"location":"dev/doc_as_code/#table-des-matieres","title":"Table des mati\u00e8res","text":"<p>La table des mati\u00e8res se trouve dans le fichier <code>mkdocs.yaml</code> dans la section <code>nav</code>.</p> <p>Un fichier <code>index.md</code> est attendu dans chaque r\u00e9pertoire car nous utilisons la fonctionalit\u00e9 <code>navigation.indexes</code>.</p>"},{"location":"dev/doc_as_code/#plugins","title":"Plugins","text":"<p>Le d\u00e9pot de documentation peut contenir un certain nombre de pluggins. A date, ils n'ont pas \u00e9t\u00e9 install\u00e9s.</p> <ul> <li><code>search</code>: moteur de recherche</li> <li><code>awesome-pages</code>: am\u00e9liorations cosm\u00e9tiques</li> <li><code>gitsnippet</code>: pour inclure des pages markdown externes provenant d'autres   projets de docs.</li> <li>Mermaid:permet d'\u00e9diter des workflows, graphique et diagrammes.</li> <li>Gantt</li> <li>Plantuml</li> </ul> <p>Il est possible d'en ajouter d'autres (\u00e0 declarer dans le <code>mkdocs.yaml</code> et dans le <code>requirements.txt</code>).</p> <p>Voir MkDocs plugin list.</p>"},{"location":"dev/doc_as_code/#diagrammes","title":"Diagrammes","text":"<p>Les diagrammes doivent \u00eatre faits avec <code>drawio.io</code> puis ajout\u00e9s au projet de documentation gitlab dans le r\u00e9pertoire <code>draw</code> et export\u00e9s commes images <code>png</code> dans le r\u00e9pertoire <code>docs/assets</code> pour \u00eatre int\u00e9gr\u00e9s \u00e0 la documentation. Il est aussi possible de les inclure directement comme fichiers <code>draw.io</code>dans la doc.</p> <p>Note</p> <p>DIOD fourni une version en ligne de <code>draw.io</code>https://draw.tech.orange/</p>"},{"location":"dev/doc_as_code/#ajouter-une-table","title":"Ajouter une table","text":"<p>Declaration avec des colonnes centr\u00e9es:</p> <pre><code>|  Variable | Value  |\n|:---------:|:------:|\n|   FIRST   |  first |\n</code></pre> <p>Resultat:</p> Variable Value FIRST first"},{"location":"dev/doc_as_code/#caracteres-dechapement","title":"Caract\u00e8res d'\u00e9chapement","text":"<p>utilisez <code>\\&gt;</code> pour \u00e9chapper un caract\u00e8re <code>&gt;</code></p>"},{"location":"dev/doc_as_code/#afficher-des-fleches","title":"Afficher des fl\u00e8ches","text":"description Symbol Value Haut \u2191 <code>&amp;uarr;</code> Bas \u2193 <code>&amp;darr;</code> Gauche \u2190 <code>&amp;larr;</code> Droite \u2192 <code>&amp;rarr;</code>"},{"location":"dev/doc_as_code/#liste-a-deux-niveaux","title":"Liste \u00e0 deux niveaux","text":"<p>Declaration:</p> <pre><code>Ceci est une liste:\n\n* Level 1\n    * Level 2\n    * Level 2\n* Level 1\n    * Level 2\n</code></pre> <p>Resultat \u2192 Ceci est une liste:</p> <ul> <li>Level 1<ul> <li>Level 2</li> <li>Level 2</li> </ul> </li> <li>Level 1<ul> <li>Level 2</li> </ul> </li> </ul> <p>Note</p> <p>4 espaces sont n\u00e9cessaires pour passer au second niveau. <code>\"MD007\": { \"indent\": 4 }</code> configur\u00e9 dans le fichier <code>.markdownlint.json</code></p>"},{"location":"dev/poetry/","title":"Premiers pas sous Poetry","text":"<p>Poetry est un syst\u00e8me de gestion de d\u00e9pendances et de packages python. Il permet de d\u00e9clarer les librairies dont d\u00e9pendent votre projet et de les g\u00e9rer (installation / mise \u00e0 jour). Poetry stocke l'ensemble des informations de votre projet dans le fichier <code>pyptoject.toml</code>. Poetry utilise un lockfile <code>poetry.lock</code> pour s'assurer que les installations soient les m\u00eames \u00e0 chaque fois.</p>"},{"location":"dev/poetry/#installation","title":"Installation","text":"<p>Se r\u00e9f\u00e9rer \u00e0 la page suivante.</p> <p>Poetry fonctionne avec une version de python &gt;= 3.8</p>"},{"location":"dev/poetry/#creer-un-environnement-poetry","title":"Cr\u00e9er un environnement poetry","text":"<p>La gestion des environnements est d\u00e9crite sur cette page.</p>"},{"location":"dev/poetry/#construire-une-structure-python-en-creant-un-repertoire-et-un-package","title":"Construire une structure python en cr\u00e9ant un r\u00e9pertoire et un package","text":"<pre><code>poetry new my-folder --name my-package\n</code></pre>"},{"location":"dev/poetry/#ou-initialiser-un-fichier-pyprojecttoml-dans-un-repertoire-existant","title":"Ou initialiser un fichier pyproject.toml dans un r\u00e9pertoire existant","text":"<pre><code>cd &lt;my-folder&gt;\npoetry init\n</code></pre>"},{"location":"dev/poetry/#recuperer-les-informations-sur-lenvironment-virtuel-dexecution","title":"R\u00e9cup\u00e9rer les informations sur l'environment virtuel d'\u00e9x\u00e9cution","text":"<pre><code>cd &lt;my-folder&gt;\npoetry env info\n</code></pre>"},{"location":"dev/poetry/#installer-votre-projet-poetry-decrit-dans-le-pyprojecttoml-avec-lexecutable-python-par-defaut","title":"Installer votre projet poetry (d\u00e9crit dans le pyproject.toml) avec l'executable python par d\u00e9faut","text":"<pre><code>cd &lt;my-folder&gt;\npoetry config virtualenvs.in-project true\n# virtualenv is located in &lt;my-folder&gt; .venv subdirectory \npoetry install\n</code></pre>"},{"location":"dev/poetry/#ou-utiliser-un-executable-different-de-python-pour-votre-environnement-virtuel","title":"Ou utiliser un \u00e9x\u00e9cutable diff\u00e9rent de python pour votre environnement virtuel","text":"<pre><code># on MacOS\ncd &lt;my-folder&gt;\npoetry config virtualenvs.in-project true\n# virtualenv is located in &lt;my-folder&gt; .venv subdirectory \npoetry env use /opt/homebrew/Cellar/python@3.9/3.9.19/bin/python3.9\n\n# on another system\ncd &lt;my-folder&gt;\npoetry config virtualenvs.in-project true\n# virtualenv is located in &lt;my-folder&gt; .venv subdirectory \npoetry env use &lt;path_to_your_python_version&gt;\n</code></pre>"},{"location":"dev/poetry/#se-connecter-a-lenvironnement-virtuel-de-votre-projet-poetry","title":"Se connecter \u00e0 l'environnement virtuel de votre projet poetry","text":"<pre><code># activate the virtualenv\npoetry shell\n\n# exit the virtualenv\nexit\n\n# deactivate the virtualenv\ndeactivate\n\n# list\npoetry env list\n\n# remove\nrm -r .venv\n</code></pre>"},{"location":"dev/poetry/#utiliser-poetry","title":"Utiliser Poetry","text":"<p>On retrouve l'ensemble des commandes poetry sur cette page.</p>"},{"location":"dev/poetry/#ajouter-un-package","title":"Ajouter un package","text":"<pre><code># specific version\npoetry add requests@2.12.1\n# will install requests 2.12.1\n\n# latest major version (up to requests version 3)\npoetry add requests^2.12.1\n# will install requests 2.31.0, same as\npoetry add requests\n\n# latest minor version (up to requests version 2.13)\npoetry add requests~2.12.1\n# will install requests 2.12.5\n</code></pre>"},{"location":"dev/poetry/#lister-les-packages","title":"Lister les packages","text":"<pre><code>poetry show\n</code></pre>"},{"location":"dev/poetry/#desinstaller-un-package","title":"Desinstaller un package","text":"<pre><code>poetry remove requests\n</code></pre>"},{"location":"dev/tools/","title":"Stations de travail &amp; outils","text":""},{"location":"dev/tools/#ce-dont-on-a-generalement-besoin","title":"Ce dont on a g\u00e9n\u00e9ralement besoin","text":"<ul> <li>Connectivit\u00e9 \u00e0 Google Cloud Platform</li> <li>Authentification au Gitlab DIOD par cl\u00e9 SSH</li> <li>Une capacit\u00e9 \u00e0 installer des outils avec droits d'aministration sur nos postes</li> <li>Un IDE - Integrated Development Environment</li> <li>De la fl\u00e9xibilit\u00e9 dans la gestion des proxies: DEVACCESS</li> </ul> <p>En fonction de ce que vous poss\u00e9dez (comme poste de travail ou comme acc\u00e8s) il ne sera pas forc\u00e9ment n\u00e9cessaire d'installer tous les outils ni d'appliquer toutes les configurations pr\u00e9sent\u00e9es ci-dessous.</p> <p>C'est de qui rend l'exercice complexe.</p> <p>Il faudra dans tous les cas un client ssh et un client Git pour travailler \u00e0 plusieurs sur un m\u00eame d\u00e9pot.</p>"},{"location":"dev/tools/#ssh-client","title":"SSH client","text":"<ul> <li>natif sous Linux et MacOS (pas besoin de putty, winSCP, \u2026)</li> <li>.ssh/config peut \u00eatre customizable</li> </ul> <p>A la premi\u00e8re utilisation, il faudra g\u00e9n\u00e9rer un couple de cl\u00e9s (priv\u00e9e et publique) et enregistrer sa cl\u00e9 publique dans Gitlab.</p> <pre><code>ssh-keygen -t ed25519\n</code></pre> <p>Appuyez sur ENTREE plusieurs fois, les cl\u00e9s seront g\u00e9n\u00e9r\u00e9es dans votre HOME directory dans un sous r\u00e9pertoire .ssh.</p> <p>Il ne reste plus qu'\u00e0 copier la cl\u00e9 publique sous Gitlab</p>"},{"location":"dev/tools/#usage-1-e-buro-git-sql","title":"Usage 1 : E-Buro - Git - SQL","text":"<p>Pour un usage basique de Git, un simple programme de ligne de commande peut suffire.</p> <p>Dans ce cas, se r\u00e9f\u00e9rer \u00e0 la documentation suivante:</p> <p>Environnement-de-d\u00e9veloppement-web</p> <p>Ne suivre que les chapitres:</p> <ul> <li>Cmder</li> <li>Git (avec CNTLM si vous ne poss\u00e9dez pas de DevAccess)</li> </ul> <p>Sinon, il vous faudra suivre:</p> <ul> <li>Cmder</li> <li>Cntlm</li> <li>Git</li> </ul>"},{"location":"dev/tools/#usage-2-e-buro-git-sql-python","title":"Usage 2 : E-Buro - Git - SQL - Python","text":"<p>Pour un usage plus avanc\u00e9, il faudra vous munir d'un IDE (Environnement de d\u00e9veloppement).</p>"},{"location":"dev/tools/#ide","title":"IDE","text":"<ul> <li>VisualStudio</li> <li>PyCharm</li> </ul>"},{"location":"dev/tools/#usage-3-e-buro-git-sql-python-docker","title":"Usage 3 : E-Buro - Git - SQL - Python - Docker","text":"<p>Il sera n\u00e9cessaire d'installer WSL pour travailler sur ce type de PC E-Buro.</p> <p>Il est souvent n\u00e9cessaire d'acc\u00e9der \u00e0 une ressource distante par ssh, de r\u00e9cup\u00e9rer des librairies ou des packages afin d'\u00e9x\u00e9cuter des programmes sur son poste de travail.</p> <p>Warning</p> <p>Cette documentation concerne une configuration Windows WSL2. Elle peut \u00eatre utilis\u00e9e pour tout autre syst\u00e8me GNU Linux ou MacOS. Dans ce cas, ne r\u00e9installez pas le composant wsl-vpnkit.</p> <p>Composants \u00e0 installer :</p> Composant Commentaire wsl-vpnkit Pour l'acc\u00e8s r\u00e9seau depuis WSL2 vers le r\u00e9seau Windows docker CE Un docker engine et un client CLI client (optionnel)"},{"location":"dev/tools/#vpn-kit-windowswsl","title":"VPN Kit (windows/WSL)","text":"<p>Doc d'installation: on plazza</p> <p>Pour lancer le service:</p> <pre><code>sudo service wsl-vpnkit start\n</code></pre>"},{"location":"dev/tools/#docker-ce","title":"Docker CE","text":"<p>Si vous souhaitez localement : construire des images docker, r\u00e9cup\u00e9rer des images de conteneurs, tagguer des images...</p> <p>Doc d'installation: on plazza</p>"}]}